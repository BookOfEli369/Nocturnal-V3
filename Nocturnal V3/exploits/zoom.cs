using System;
using UnityEngine;
namespace Nocturnal.Exploits
{
    internal class Zoom
    {
        private static bool _ItsZoomKey = false;
        private static bool _ZoomToggle = false;
        private static float _ZoomValue = 60;

        internal static void _Zoom()
        {
            if (Input.GetKeyDown(KeyCode.Mouse4))
            {
                _ItsZoomKey = false;
                if (_ItsZoomKey == false)
                {
                    Ui.Objects._HudMesh.SetActive(false);
                    _ZoomValue = 60;
                    _ZoomToggle = true;
                }
            }
            if (_ZoomToggle)
            {
                if (_ZoomValue <= 6)
                {
                    _ZoomValue = 6;
                    _ZoomToggle = false;
                    Settings.Hooks.cameraeye.fieldOfView = _ZoomValue;
                    Settings.Hooks.cameraeye.transform.Find("StackedCamera : Cam_InternalUI").gameObject.GetComponent<Camera>().fieldOfView = _ZoomValue;
                    return;
                }
                _ZoomValue -= Time.deltaTime * 200;
                Settings.Hooks.cameraeye.fieldOfView = _ZoomValue;
            }
            if (!_ItsZoomKey)
            {
                if (Input.GetKeyUp(KeyCode.Mouse4))
                {
                    _ZoomToggle = false;
                    Ui.Objects._HudMesh.SetActive(true);
                    Settings.Hooks.cameraeye.transform.Find("StackedCamera : Cam_InternalUI").gameObject.GetComponent<Camera>().fieldOfView = 60;
                    Settings.Hooks.cameraeye.fieldOfView = 60;
                    _ItsZoomKey = true;
                }
            }
        }
    }
}
